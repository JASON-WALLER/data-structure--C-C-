#include "stdio.h"
#include "string.h"
#include "stdlib.h"

#define M 5
struct CycQueue{
	char arr[M];
	int front;
	int rear;
};
void InitQ(CycQueue &cq)
{
	cq.front=0;
	cq.rear=0;
}
bool fullQ(CycQueue cq)
{
	if( (cq.rear+1)%M==cq.front)
		return true;
	else
		return false;
}
bool emptyQ(CycQueue cq)
{
	if( cq.rear==cq.front)
		return true;
	else
		return false;
}
void InQ(CycQueue &cq, char ch)
{
	cq.arr[cq.rear]=ch;
	cq.rear=(cq.rear+1)%M;
}
void OutQ(CycQueue &cq, char &ch)
{
	ch=cq.arr[cq.front];
	cq.front=(cq.front+1)%M;
}

//方法二：进满-全出空，再进满-再全出空
int main()
{
	CycQueue CQ;
	char ch1,ch2;

	InitQ(CQ);
	ch1=getchar();
	while( ch1!='#')
	{
		if( !fullQ(CQ) )
		{
			InQ(CQ,ch1);
			ch1=getchar();
		}
		else
			while(!emptyQ(CQ))
			{
				OutQ(CQ,ch2);
				printf("%c",ch2);
			}
	}
	while(!emptyQ(CQ))
	{
		OutQ(CQ,ch2);
		printf("%c",ch2);
	}
	printf("\n");
}

   
